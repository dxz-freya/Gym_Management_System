@model GymManagement.Areas.Admin.Models.UserViewModel
@{
    ViewData["Title"] = "Manage Users and Roles";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<style>
    @@media (max-width: 768px) {
        .responsive-table {
            display: none;
        }

        .card-grid {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .user-card {
            flex: 1 1 calc(50% - 0.5rem);
            background: #f9f9f9;
            border-radius: 12px;
            padding: 1rem;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);
            text-align: center;
        }

        .user-card .name {
            font-weight: bold;
            font-size: 1.1rem;
        }

        .user-card .role {
            font-size: 0.9rem;
            color: #666;
        }

        .user-card .contact {
            font-size: 0.85rem;
            color: #999;
        }

        .user-card .btn-group {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            flex-wrap: wrap;
        }
    }

    @@media (max-width: 375px) {
        .user-card {
            flex: 1 1 100%;
        }
    }
    .page-link {
        background-color: #ffffff;
        color: #343A40;
        border: 1px solid #343A40;
    }

    .pagination .active .page-link {
        background-color: #343A40;
        color: #fff;
        border-color: #343A40;
    }

    .pagination .page-link:hover {
        background-color: #ff9900;
        color: #fff;
    }

    .page-item.disabled .page-link {
        background-color: #ffffff;
        color: #ccc !important;
        border: 1px solid #ddd;
        pointer-events: none;
    }

    .pagination {
        flex-wrap: wrap;
        gap: 5px;
    }

    .go-page-input {
        width: 80px;
        background-color: #ffffff;
        color: #343A40;
        border: 1px solid #343A40;
        border-radius: 6px;
        padding: 3px 6px;
    }

    .go-page-input::placeholder {
        color: #aaa;
    }

    .go-page-input:focus {
        outline: none;
        box-shadow: none;
        border-color: #ff9900;
    }

    @@media (max-width: 576px) {
        .pagination {
            justify-content: center;
        }

        .pagination .page-link {
            font-size: 0.75rem;
            padding: 0.2rem 0.4rem;
        }
    }

    .search-wrapper {
        position: relative;
        max-width: 400px;
        width: 100%;
    }
</style>
 <!-- Toast -->
        @if (TempData["ToastMessage"] != null)
        {
            var toastType = TempData["ToastClass"]?.ToString();
            var toastTitle = TempData["ToastTitle"]?.ToString() ?? toastType?.ToUpper();
            var toastIcon = toastType switch
            {
                "success" => "fa-check-circle",
                "danger" => "fa-times-circle",
                "warning" => "fa-exclamation-triangle",
                "info" => "fa-info-circle",
                _ => "fa-bell"
            };
            var toastColor = toastType switch
            {
                "success" => "#4CAF50",
                "danger" => "#F44336",
                "warning" => "#FFC107",
                "info" => "#2196F3",
                _ => "#333"
            };

            <div id="floatingToast" class="position-absolute" style="bottom: 65px; left: 50%; transform: translateX(-50%);
                                                                        background-color: white; border-left: 6px solid @toastColor; max-width: 600px;
                                                                        box-shadow: 0 0 12px rgba(0,0,0,0.15); padding: 10px 18px;
                                                                        border-radius: 8px; z-index: 1055; display: none;">
                <div class="d-flex align-items-start">
                    <i class="fas @toastIcon mr-3 mt-1" style="color: @toastColor; font-size: 1.3rem;"></i>
                    <div class="flex-fill">
                        <div class="font-weight-bold text-dark">@toastTitle</div>
                        <div class="text-muted">@TempData["ToastMessage"]</div>
                    </div>
                    <button type="button" class="close ml-3 mt-1" aria-label="Close"><span>&times;</span></button>
                </div>
            </div>
        }

<!-- Search only -->
<form asp-action="Index" method="get" class="d-flex justify-content-center mt-3 mb-3" id="searchForm">
    <div class="search-wrapper">
        <input type="text" name="keyword" value="@ViewBag.Keyword" id="searchInput" class="form-control rounded-pill text-center bg-light border-0 shadow-sm px-4 py-2" placeholder="Search UserName" />
    </div>
    <div class="ml-3">
        <a asp-action="Add" class="btn btn-dark rounded-pill px-4 py-2 d-flex align-items-center">
            <span class="mr-2">+</span> Add
        </a>
    </div>
</form>

<!-- Table View -->
<div class="table-responsive responsive-table">
    <table class="table table-striped text-center align-middle mb-0">
        <thead class="table-light">
            <tr>
                <th>Username</th>
                <th>Full Name</th>
                <th>Role</th>
                <th>Contact</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="userTableBody">
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Name</td>
                    <td>
                        @foreach (var role in user.RoleNames)
                        {
                            <span class="badge bg-info text-dark mr-1">@role</span>
                        }
                    </td>
                    <td>@user.Email</td>
                    <td>
                        <div class="d-flex justify-content-left flex-wrap">
                            <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-outline-secondary btn-sm mr-2 mb-1">edit</a>
                            <button type="button" class="btn btn-outline-danger btn-sm mr-2 mb-1" data-toggle="modal" data-target="#deleteModal" data-userid="@user.Id">delete</button>
                            <button type="button" class="btn btn-outline-warning btn-sm mr-2 mb-1" data-toggle="modal" data-target="#makeAdminModal" data-userid="@user.Id" @(user.RoleNames.Contains("Admin") ? "disabled" : "")>make admin</button>
                            <button type="button" class="btn btn-outline-dark btn-sm mb-1" data-toggle="modal" data-target="#removeAdminModal" data-userid="@user.Id" @(!user.RoleNames.Contains("Admin") ? "disabled" : "")>remove admin</button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<!-- Phone View -->
<div class="card-grid d-md-none mt-3" id="userCardContainer">
    @foreach (var user in Model.Users)
    {
        <div class="user-card">
            <div class="name">@user.Name</div>
            <div class="role">@user.UserName</div>
            <div class="mb-2">@string.Join(", ", user.RoleNames)</div>
            <div class="contact">@user.Email</div>
            <div class="btn-group mt-2 flex-wrap justify-content-center">
                <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-outline-secondary btn-sm">edit</a>
                <button type="button" class="btn btn-outline-danger btn-sm" data-toggle="modal"
                        data-target="#deleteModal" data-userid="@user.Id">delete</button>
                <button type="button" class="btn btn-outline-warning btn-sm" data-toggle="modal"
                        data-target="#makeAdminModal" data-userid="@user.Id" @(user.RoleNames.Contains("Admin") ? "disabled" : "")>make admin</button>
                <button type="button" class="btn btn-outline-dark btn-sm" data-toggle="modal"
                        data-target="#removeAdminModal" data-userid="@user.Id" @(!user.RoleNames.Contains("Admin") ? "disabled" : "")>remove admin</button>
            </div>
        </div>
    }
</div>
<!-- Modal  -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content border-danger">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="close text-white" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">Are you sure you want to delete this user?</div>
            <div class="modal-footer">
                <form id="confirmDeleteForm" method="post" data-base="/Admin/User/Delete">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Confirm</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="makeAdminModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content border-warning">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title">Promote to Admin</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">Give this user Admin privileges?</div>
            <div class="modal-footer">
                <form id="confirmMakeAdminForm" method="post" data-base="/Admin/User/AddToAdmin">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning text-dark">Confirm</button>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="removeAdminModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content border-secondary">
            <div class="modal-header bg-light text-dark">
                <h5 class="modal-title">Remove Admin Role</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">Remove Admin privileges from this user?</div>
            <div class="modal-footer">
                <form id="confirmRemoveAdminForm" method="post" data-base="/Admin/User/RemoveFromAdmin">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-outline-secondary">Confirm</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Pagination Navigation -->
<nav aria-label="User pagination">
    <div class="d-flex justify-content-center flex-wrap align-items-center gap-2" style="margin-top:1rem">
        <ul class="pagination m-0">
            <li class="page-item @(Model.PagingInfo.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PagingInfo.CurrentPage - 1)" asp-route-keyword="@ViewBag.Keyword">Previous</a>
            </li>

            @{
                var startPage = Math.Max(1, Model.PagingInfo.CurrentPage - 2);
                var endPage = Math.Min(Model.PagingInfo.TotalPages, startPage + 4);
                if (endPage - startPage < 4) startPage = Math.Max(1, endPage - 4);
            }

            @if (startPage > 1)
            {
                <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="1" asp-route-keyword="@ViewBag.Keyword">1</a></li>
                <li class="page-item disabled"><span class="page-link">...</span></li>
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PagingInfo.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-keyword="@ViewBag.Keyword">@i</a>
                </li>
            }

            @if (endPage < Model.PagingInfo.TotalPages)
            {
                <li class="page-item disabled"><span class="page-link">...</span></li>
                <li class="page-item"><a class="page-link" asp-action="Index" asp-route-page="@Model.PagingInfo.TotalPages" asp-route-keyword="@ViewBag.Keyword">@Model.PagingInfo.TotalPages</a></li>
            }

            <li class="page-item @(Model.PagingInfo.CurrentPage == Model.PagingInfo.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PagingInfo.CurrentPage + 1)" asp-route-keyword="@ViewBag.Keyword">Next</a>
            </li>
        </ul>

        <!-- Jump to Page Form -->
        <form asp-action="Index" method="get" class="d-flex align-items-center gap-2" style="margin:1rem">
            <input type="hidden" name="keyword" value="@ViewBag.Keyword" />
            <input type="number" name="page" min="1" max="@Model.PagingInfo.TotalPages" class="form-control form-control-sm go-page-input" placeholder="Page #" />
            <button class="btn btn-dark btn-sm" style="margin-left:0.5rem" type="submit">Go</button>
        </form>
    </div>
</nav>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#deleteModal, #makeAdminModal, #removeAdminModal').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget);
                var userId = button.data('userid');
                var form = $(this).find('form');
                var base = form.data('base');
                form.attr('action', base + '/' + userId);
            });

            const toast = $('#floatingToast');
            if (toast.length) {
                toast.fadeIn('fast');
                setTimeout(() => toast.fadeOut('slow', () => toast.remove()), 3000);
                toast.find('.close').on('click', () => toast.fadeOut('fast', () => toast.remove()));
            }

            $('#searchInput').on('input', function () {
                const keyword = $(this).val();
                $.get('/Admin/User/Search', { keyword: keyword }, function (data) {
                    $('#userTableBody').html(data);
                    $('#userCardContainer').html(data);
                });
            });
        });
    </script>
}