@model GymManagement.ViewModels.ManageBookingsViewModel
@using GymManagement.Models
@using System.Globalization; 
@{
    ViewData["Title"] = "Manage Bookings";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var selectedClass = Context.Request.Query["class"];
    var selectedTrainer = Context.Request.Query["trainer"];
    var selectedDate = Context.Request.Query["date"];
    var selectedStatus = Context.Request.Query["status"];
    int currentPage = int.TryParse(Context.Request.Query["page"], out var p) ? p : 1;
    int pageSize = 10;

    var allBookings = Model.AllBookings;
    var gymClassOptions = allBookings.Select(b => b.Session.GymClass.ClassName).Distinct().ToList();
    var trainerOptions = allBookings.Select(b => b.Session.Trainer.Name).Distinct().ToList();
    var dateOptions = allBookings.Select(b => b.Session.SessionDateTime.Date).Distinct().OrderBy(d => d).ToList();
    var statusOptions = Enum.GetValues(typeof(BookingStatus)).Cast<BookingStatus>().Select(s => s.ToString()).ToList();

    var filteredBookings = allBookings;
    if (!string.IsNullOrEmpty(selectedClass))
        filteredBookings = filteredBookings.Where(b => b.Session.GymClass.ClassName == selectedClass).ToList();
    if (!string.IsNullOrEmpty(selectedTrainer))
        filteredBookings = filteredBookings.Where(b => b.Session.Trainer.Name == selectedTrainer).ToList();
    if (!string.IsNullOrEmpty(selectedDate) && DateTime.TryParse(selectedDate, out var parsedDate))
        filteredBookings = filteredBookings.Where(b => b.Session.SessionDateTime.Date == parsedDate).ToList();
    if (!string.IsNullOrEmpty(selectedStatus) && Enum.TryParse<BookingStatus>(selectedStatus, out var status))
        filteredBookings = filteredBookings.Where(b => b.Status == status).ToList();

    var totalPages = (int)Math.Ceiling((double)filteredBookings.Count / pageSize);
    var pagedBookings = filteredBookings.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
}

<section class="breadcrumb-section set-bg" data-setbg="@Url.Content("~/img/breadcrumb-bg.jpg")" style="background-image: url('@Url.Content("~/img/breadcrumb-bg.jpg")');">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb-text">
                    <h2>Manage Bookings</h2>
                    <div class="bt-option">
                        <a asp-controller="Home" asp-action="Index">Home</a>
                        <span>Bookings</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="services-section spad">
    <div class="container">
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-info text-center">@TempData["Message"]</div>
        }

        <div class="section-title text-center">
            <span>Create</span>
            <h2>New Booking</h2>
        </div>

        <form asp-controller="Receptionist" asp-action="CreateBooking" method="post" class="mb-5">
            <div class="row">
                <div class="col-md-4 mb-3">
                    <select asp-for="NewBooking.CustomerId" asp-items="Model.CustomerList" class="form-control">
                        <option disabled selected>Select Customer</option>
                    </select>
                </div>
                <div class="col-md-4 mb-3">
                    <select asp-for="NewBooking.SessionId" asp-items="Model.SessionList" class="form-control">
                        <option disabled selected>Select Session</option>
                    </select>
                </div>
                <div class="col-md-4 mb-3">
                    <button type="submit" class="btn btn-success w-100">Add Booking</button>
                </div>
            </div>
        </form>

        <div class="section-title text-center">
            <h2> Booking Records</h2>
        </div>
        <div class="filter-row mb-4 text-center">
            <form method="get" asp-action="ManageBookings" asp-controller="Receptionist">
                <a href="@Url.Action("ManageBookings", "Receptionist")" class="btn btn-outline-light mr-3">All</a>

                <select name="class" class="form-control d-inline w-auto">
                    <option value="">All Classes</option>
                    @foreach (var option in gymClassOptions) {
                        var selected = selectedClass == option ? "selected" : "";
                        @:<option value="@option" @selected>@option</option>
                    }
                </select>

                <select name="trainer" class="form-control d-inline w-auto">
                    <option value="">All Trainers</option>
                    @foreach (var option in trainerOptions) {
                        var selected = selectedTrainer == option ? "selected" : "";
                        @:<option value="@option" @selected>@option</option>
                    }
                </select>

                <select name="date" class="form-control d-inline w-auto">
                    <option value="">All Dates</option>
                    @foreach (var option in dateOptions) {
                        var dstr = option.ToString("yyyy-MM-dd", CultureInfo.InvariantCulture);
                        var selected = selectedDate == dstr ? "selected" : "";
                        @:<option value="@dstr" @selected>@dstr</option>
                    }
                </select>

                <select name="status" class="form-control d-inline w-auto">
                    <option value="">All Statuses</option>
                    @foreach (var option in statusOptions) {
                        var selected = selectedStatus == option ? "selected" : "";
                        @:<option value="@option" @selected>@option</option>
                    }
                </select>

                <button type="submit" class="btn btn-warning ml-2">Apply</button>
            </form>
        </div>

        <table class="table table-bordered table-striped table-hover bg-white text-center">
            <thead class="thead-dark">
                <tr>
                    <th>Customer</th>
                    <th>Class</th>
                    <th>Trainer</th>
                    <th>Date & Time</th>
                    <th>Status</th>
                    <th>Check-In</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var b in pagedBookings)
                {
                    <tr>
                        <td>@b.Customer.Name</td>
                        <td>@b.Session.GymClass.ClassName</td>
                        <td>@b.Session.Trainer.Name</td>
                        <td>@b.Session.SessionDateTime.ToString("MMM/dd/yyyy HH:mm", CultureInfo.InvariantCulture)</td>
                        <td>@b.Status</td>
                        <td>
                            @if (b.Status == BookingStatus.Pending)
                            {
                                <form asp-action="ConfirmBooking" asp-controller="Receptionist" method="post" class="d-inline">
                                    <input type="hidden" name="bookingId" value="@b.BookingId" />
                                    <input type="hidden" name="class" value="@selectedClass" />
                                    <input type="hidden" name="trainer" value="@selectedTrainer" />
                                    <input type="hidden" name="date" value="@selectedDate" />
                                    <input type="hidden" name="status" value="@selectedStatus" />
                                    <input type="hidden" name="page" value="@currentPage" />
                                    <button class="btn btn-sm btn-success">Confirm</button>
                                </form>
                                <form asp-action="CancelBooking" asp-controller="Receptionist" method="post" class="d-inline">
                                    <input type="hidden" name="bookingId" value="@b.BookingId" />
                                    <input type="hidden" name="class" value="@selectedClass" />
                                    <input type="hidden" name="trainer" value="@selectedTrainer" />
                                    <input type="hidden" name="date" value="@selectedDate" />
                                    <input type="hidden" name="status" value="@selectedStatus" />
                                    <input type="hidden" name="page" value="@currentPage" />
                                    <button class="btn btn-sm btn-danger">Cancel</button>
                                </form>
                            }
                            else if (b.Status == BookingStatus.CheckedIn)
                            {
                                <span class="badge badge-success">Checked In</span>
                            }
                            else
                            {
                                <span class="badge badge-secondary">@b.Status</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-center mt-4">
            @if (totalPages > 1)
            {
                int maxPagesToShow = 5;
                int startPage = Math.Max(1, currentPage - 2);
                int endPage = Math.Min(totalPages, currentPage + 2);

                if (startPage > 1)
                {
                    <a class="btn btn-sm btn-outline-warning mx-1" href="@Url.Action("ManageBookings", new { @class = selectedClass, trainer = selectedTrainer, date = selectedDate, status = selectedStatus, page = 1 })">1</a>
                    if (startPage > 2)
                    {
                        <span class="mx-1">...</span>
                    }
                }

                for (int i = startPage; i <= endPage; i++)
                {
                    <a class="btn btn-sm btn-outline-warning mx-1 @(i == currentPage ? "font-weight-bold" : "")"
                       href="@Url.Action("ManageBookings", new { @class = selectedClass, trainer = selectedTrainer, date = selectedDate, status = selectedStatus, page = i })">@i</a>
                }

                if (endPage < totalPages)
                {
                    if (endPage < totalPages - 1)
                    {
                        <span class="mx-1">...</span>
                    }
                    <a class="btn btn-sm btn-outline-warning mx-1" href="@Url.Action("ManageBookings", new { @class = selectedClass, trainer = selectedTrainer, date = selectedDate, status = selectedStatus, page = totalPages })">@totalPages</a>
                }
            }
        </div>
    </div>
</section>

@section Scripts {
    <script>
        document.querySelectorAll("select").forEach(sel => {
            sel.addEventListener("change", () => {
                document.getElementById("loader")?.style?.setProperty("display", "block");
            });
        });
    </script>
}
