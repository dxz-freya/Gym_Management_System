@model GymManagement.ViewModels.TrainerDashboardViewModel
@{
    ViewData["Title"] = "Trainer Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <style>
        .card {
            background-color: #2a2a2a;
            border: none;
            border-radius: 10px;
            overflow: hidden;
        }
        .card-title, .card-text {
            color: #ffffff;
        }
        .card-footer {
            background-color: #222;
            border-top: none;
        }
        .btn-info {
            background-color: #3498db;
            border-color: #2980b9;
        }
        .modal-content {
            background-color: #1f1f1f;
            color: #ffffff;
        }
        .modal-header, .modal-footer {
            border-color: #444;
        }
        .modal-title {
            color: #ffffff;
        }
        .modal-body p,
        .modal-body h6,
        .modal-body li {
            color: #dddddd;
        }
        .list-group-item {
            background-color: #2a2a2a;
            border-color: #444;
            color: #ffffff;
        }
        .badge {
            font-size: 0.85em;
        }
    </style>
}

<section class="breadcrumb-section set-bg" data-setbg="@Url.Content("~/img/breadcrumb-bg.jpg")">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb-text">
                    <h2>Dashboard</h2>
                    <div class="bt-option">
                        <a asp-controller="Home" asp-action="Index">Home</a>
                        <span>Trainer</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="container mt-5">
    <div class="row mb-4 text-center text-white">
        <div class="col-md-4 mb-3">
            <div class="bg-dark p-4 rounded shadow-sm h-100">
                <h4>Total Sessions</h4>
                <p class="fs-3">@Model.TotalSessions</p>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="bg-dark p-4 rounded shadow-sm h-100">
                <h4>Today</h4>
                <p class="fs-3">@Model.TodaySessionsCount</p>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="bg-dark p-4 rounded shadow-sm h-100">
                <h4>My Classes</h4>
                <p class="fs-3">@Model.TotalGymClasses</p>
            </div>
        </div>
    </div>
    <h2 class="text-light mb-4">Upcoming Sessions</h2>
    <div class="row">
        @foreach (var session in Model.UpcomingSessions)
        {
            <div class="col-md-6 mb-4">
                <div class="card d-flex flex-row">
                    <img src="@Url.Content("~/uploads/gymclass/" + (session.GymClass?.ImageName ?? "class-default.jpg"))" class="img-fluid" style="width: 40%; object-fit: cover;" />
                    <div class="p-3 d-flex flex-column justify-content-between flex-grow-1">
                        <div>
                            <h5 class="card-title">@session.GymClass?.ClassName</h5>
                            <p class="card-text"><strong>Date:</strong> @session.SessionDateTime.ToString("yyyy-MM-dd HH:mm")</p>
                            <p class="card-text"><strong>Room:</strong> @session.Room?.RoomName</p>
                        </div>
                        <button class="btn btn-info btn-sm mt-2" data-toggle="modal" data-target="#sessionModal-@session.SessionId">View Details</button>
                    </div>
                </div>
            </div>

            <!-- Modal -->
            <div class="modal fade" id="sessionModal-@session.SessionId" tabindex="-1" role="dialog">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Session Details</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p><strong>Class:</strong> @session.SessionName</p>
                            <p><strong>Room:</strong> @session.Room?.RoomName</p>
                            <p><strong>Date:</strong> @session.SessionDateTime.ToString("yyyy-MM-dd HH:mm")</p>
                            <p><strong>Bookings:</strong> @(session.Bookings?.Count ?? 0)</p>
                            <hr />
                            <h6>Booked Customers:</h6>
                            @if (session.Bookings != null && session.Bookings.Any())
                            {
                                <ul class="list-group" id="booking-list-@session.SessionId"></ul>
<div class="mt-2" id="booking-pagination-@session.SessionId" class="text-center"></div>
                            }
                            
                            else
                            {
                                <p>No customers booked.</p>
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        }
</div>
    
@section Scripts {
<script>
    function loadBookings(sessionId, page = 1) {
        const container = document.getElementById("booking-list-" + sessionId);
        const pagination = document.getElementById("booking-pagination-" + sessionId);
        fetch(`/Trainer/GetSessionBookings?sessionId=${sessionId}&page=${page}`)
            .then(res => res.json())
            .then(data => {
                container.innerHTML = "";
                data.bookings.forEach(b => {
                    const item = document.createElement("li");
                    item.className = "list-group-item d-flex justify-content-between align-items-start flex-column";
                    item.innerHTML = `
                        <div><strong>Name:</strong> ${b.customerName}</div>
                        <div><strong>Session:</strong> ${b.sessionName}</div>
                        <div><strong>Time:</strong> ${b.sessionTime}</div>
                        <div><strong>Status:</strong> <span class="badge badge-secondary">${b.status}</span></div>
                    `;
                    container.appendChild(item);
                });

                let totalPages = Math.ceil(data.totalCount / 5);
                pagination.innerHTML = '';
                for (let i = 1; i <= totalPages; i++) {
                    let btn = document.createElement('button');
                    btn.className = 'btn btn-sm btn-light mx-1';
                    btn.textContent = i;
                    btn.onclick = () => loadBookings(sessionId, i);
                    pagination.appendChild(btn);
                }
            });
    }

    document.addEventListener("DOMContentLoaded", () => {
        document.querySelectorAll("[data-toggle='modal']").forEach(btn => {
            btn.addEventListener("click", function () {
                const id = this.getAttribute("data-target").replace('#sessionModal-', '');
                loadBookings(id);
            });
        });
    });
</script>
}

